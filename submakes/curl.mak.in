define(`R2_PKG', `curl')dnl
define(`R2_VERSION', `7.82.0')dnl
define(`R2_DIR', `R2_PKG-R2_VERSION')dnl
define(`R2_DIST', `R2_DIR.tar.xz')dnl
define(`R2_URL', `http://curl.haxx.se/download/R2_DIST')dnl

include(`r2.m4')
R2_DECLS
R2_RULE_UNPACK
R2_RULE_PATCH
R2_RULE_MAKE
R2_RULE_INSTALL
R2_RULE_CLEAN

ifeq ($(SCHROOT_CHROOT_NAME),trusty-amd64)
CURLFLAGS = -k
endif

.curl.fetch:
	mkdir -p $(CWD)/dists && cd $(CWD)/dists && \
		if [ ! -f $(curl.tgz) ]; then curl -L -O --cacert $(CAFILE) $(CURLFLAGS) $(curl.url); fi && \
	touch -a $(CWD)/.curl.fetch

# curl is used solely at build time as a dependency of git,
# so dont bother creating static libs
.curl.args := \
	--prefix=$(CWD)/R2_BUILD/tools \
	--with-ssl=$(DESTDIR)$(pfx) \
        --without-gnutls

.curl.config: .curl.unpack .openssl.install
	cd R2_BUILD/$(curl.dir) && \
	PKG_CONFIG_PATH="$(PKG_CONFIG_PATH)" \
        CFLAGS="$(CFLAGS)" \
        CXXFLAGS="$(CFLAGS)" \
        LDFLAGS="$(LDFLAGS)" \
	LD_LIBRARY_PATH="$(LD_LIBRARY_PATH):$(DESTDIR)$(pfx)/lib" \
	LIBS="-ldl -pthread" \
        ./configure $(.curl.args)&& \
	touch $(CWD)/$@

.curl.install: .curl.make
	cd R2_BUILD/$(curl.dir) && \
	DYLD_LIBRARY_PATH=$(DESTDIR)$(pfx)/lib \
	LD_LIBRARY_PATH=$(LD_LIBRARY_PATH):$(DESTDIR)$(pfx)/lib \
        $(MAKE) install DESTDIR= && \
	touch $(CWD)/$@
